[{"E:\\OneDrive - Linköpings universitet\\Universitetsuppgifter\\ÅR 4\\TNM108 - Maskininlärning för sociala medier\\project\\wine_recommender\\src\\reportWebVitals.js":"1","E:\\OneDrive - Linköpings universitet\\Universitetsuppgifter\\ÅR 4\\TNM108 - Maskininlärning för sociala medier\\project\\wine_recommender\\src\\index.tsx":"2","E:\\OneDrive - Linköpings universitet\\Universitetsuppgifter\\ÅR 4\\TNM108 - Maskininlärning för sociala medier\\project\\wine_recommender\\src\\App.tsx":"3","E:\\OneDrive - Linköpings universitet\\Universitetsuppgifter\\ÅR 4\\TNM108 - Maskininlärning för sociala medier\\project\\wine_recommender\\src\\Form.tsx":"4","E:\\OneDrive - Linköpings universitet\\Universitetsuppgifter\\ÅR 4\\TNM108 - Maskininlärning för sociala medier\\project\\wine_recommender\\src\\fetcher.ts":"5","E:\\OneDrive - Linköpings universitet\\Universitetsuppgifter\\ÅR 4\\TNM108 - Maskininlärning för sociala medier\\project\\wine_recommender\\src\\Results.tsx":"6"},{"size":362,"mtime":499162500000,"results":"7","hashOfConfig":"8"},{"size":497,"mtime":1607098038983,"results":"9","hashOfConfig":"8"},{"size":2731,"mtime":1607440694293,"results":"10","hashOfConfig":"8"},{"size":6253,"mtime":1607443053439,"results":"11","hashOfConfig":"8"},{"size":500,"mtime":1607105655298,"results":"12","hashOfConfig":"8"},{"size":3618,"mtime":1607443354042,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"12fawrs",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"19"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},"E:\\OneDrive - Linköpings universitet\\Universitetsuppgifter\\ÅR 4\\TNM108 - Maskininlärning för sociala medier\\project\\wine_recommender\\src\\reportWebVitals.js",[],["30","31"],"E:\\OneDrive - Linköpings universitet\\Universitetsuppgifter\\ÅR 4\\TNM108 - Maskininlärning för sociala medier\\project\\wine_recommender\\src\\index.tsx",[],["32","33"],"E:\\OneDrive - Linköpings universitet\\Universitetsuppgifter\\ÅR 4\\TNM108 - Maskininlärning för sociala medier\\project\\wine_recommender\\src\\App.tsx",[],"E:\\OneDrive - Linköpings universitet\\Universitetsuppgifter\\ÅR 4\\TNM108 - Maskininlärning för sociala medier\\project\\wine_recommender\\src\\Form.tsx",["34","35","36"],"import React, { FormEvent, useEffect, useState, useContext } from 'react'\r\nimport useSWR from 'swr'\r\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\r\nimport MuiAutocomplete from '@material-ui/lab/Autocomplete';\r\nimport { Card, CircularProgress, TextField, FormControl, Button, Typography, Slider, Slide } from '@material-ui/core'\r\nimport './App.css';\r\nimport { resultWinesContext } from './App';\r\n\r\nconst useStyles = makeStyles((theme) =>\r\n  createStyles({\r\n    card: {\r\n      padding: 40,\r\n      width: \"100vw\",\r\n      maxWidth: 600,\r\n    },\r\n    formWrap: {\r\n      width: \"100%\",\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n    },\r\n    formControl: {\r\n      padding: theme.spacing(1),\r\n      width: \"100%\",\r\n      maxHeight: 300,\r\n    },\r\n    chips: {\r\n      display: 'flex',\r\n      flexWrap: 'wrap',\r\n    },\r\n    chip: {\r\n      margin: 2,\r\n    },\r\n    buttonContainer: {\r\n      width: \"100%\",\r\n      display: \"flex\",\r\n      justifyContent: \"center\",\r\n    }\r\n  }),\r\n)\r\n\r\nconst numFormatter = (num: number): string => {\r\n  if (num > 9999) {\r\n    return (num / 1000).toFixed(0) + \"K\"; // convert to K for number from > 1000 < 1 million\r\n  }\r\n  \r\n  return num.toString(); // if value < 1000, nothing to do\r\n}\r\n\r\ninterface FormComponentProps {\r\n  data: WineFormData\r\n}\r\nconst Form = ({ data }: FormComponentProps) => {\r\n  const classes = useStyles();\r\n  const { setWines } = useContext(resultWinesContext)\r\n\r\n  const [selectedCountries, setSelectedCountries] = useState<string[]>([])\r\n  const [selectedTypes, setSelectedTypes] = useState<string[]>([])\r\n  const [selectedCategories, setSelectedCategories] = useState<string[]>([])\r\n  const [selectedGrapes, setSelectedGrapes] = useState<string[]>([])\r\n  const [priceRangePercentage, setPriceRangePercentage] = useState<number[]>([0, 100])\r\n  const [priceRange, setPriceRange] = useState<number[]>([0, 50000])\r\n  const [hasUpdatedPrice, setHasUpdatedPrice] = useState<boolean>(false)\r\n  const [tasteDescription, setTasteDescription] = useState<string>(\"\")\r\n\r\n  useEffect(() => {\r\n    if (data && !hasUpdatedPrice) {\r\n      setPriceRange([data.priceLow, data.priceHigh])\r\n      setHasUpdatedPrice(true)\r\n    }\r\n  }, [data, hasUpdatedPrice])\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      const newLow: number = (priceRangePercentage[0] / 100) * data.priceHigh\r\n      const newMax: number = (priceRangePercentage[1] / 100) * data.priceHigh\r\n      setPriceRange([newLow, newMax])\r\n    }\r\n  }, [data, priceRangePercentage])\r\n\r\n  useEffect(() => {\r\n    console.log(priceRange)\r\n  }, [priceRange])\r\n\r\n  const handleSubmit = async (e: FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault()\r\n    \r\n    const res = await fetch('/api/recommend', {\r\n      \"method\": \"POST\",\r\n      \"headers\": { 'Content-Type': 'application/json' },\r\n      \"body\": JSON.stringify({\r\n        countries: selectedCountries,\r\n        types: selectedTypes,\r\n        categoryTastes: selectedCategories,\r\n        grapes: selectedGrapes,\r\n        priceLow: priceRange[0],\r\n        priceHigh: priceRange[1],\r\n        tasteDescription\r\n      })\r\n    })\r\n\r\n    if (res.ok) {\r\n      const data: { results: Wine[] } = await res.json()\r\n      setWines(data.results)\r\n    } else {}\r\n  }\r\n\r\n  return (\r\n    <Card title=\"Vinrekommendation\" className={classes.card}>\r\n      <Typography variant=\"h4\">\r\n        Vinrekommendation\r\n      </Typography>\r\n\r\n      <form action=\"/\" method=\"POST\" onSubmit={handleSubmit} className={classes.formWrap}>\r\n        <FormControl className={classes.formControl}>\r\n          <Autocomplete<string[]>\r\n            setState={setSelectedCountries}\r\n            data={data.countries}\r\n            label=\"Land\"\r\n          />\r\n        </FormControl>\r\n        <FormControl className={classes.formControl}>\r\n          <Autocomplete<string[]>\r\n            setState={setSelectedTypes}\r\n            data={data.types}\r\n            label=\"Typ\"\r\n          />\r\n        </FormControl>\r\n        <FormControl className={classes.formControl}>\r\n          <Autocomplete<string[]>\r\n            setState={setSelectedCategories}\r\n            data={data.categoryTastes}\r\n            label=\"Kategori\"\r\n          />\r\n        </FormControl>\r\n        <FormControl className={classes.formControl}>\r\n          <Autocomplete<string[]>\r\n            setState={setSelectedGrapes}\r\n            data={data.grapes}\r\n            label=\"Druvor\"\r\n          />\r\n        </FormControl>\r\n        <FormControl className={classes.formControl} style={{ alignItems: \"flex-start\" }}>\r\n          <Typography gutterBottom>\r\n            Pris\r\n          </Typography>\r\n          <Slider\r\n            value={priceRangePercentage}\r\n            onChange={(e, newValue) => {setPriceRangePercentage(newValue as number[])}}\r\n            valueLabelDisplay=\"auto\"\r\n            aria-labelledby=\"range-slider\"\r\n            // max={data.priceHigh}\r\n            scale={(x) => Math.floor((x/100) * data.priceHigh)}\r\n            // scale={(x) => x ** 5}\r\n            valueLabelFormat={numFormatter}\r\n            // getAriaValueText={valuetext}\r\n          />\r\n        </FormControl>\r\n        <FormControl className={classes.formControl}>\r\n          <TextField\r\n            value={tasteDescription}\r\n            onChange={(e) => {setTasteDescription(e.currentTarget.value)}}\r\n            id=\"outlined-textarea\"\r\n            label=\"Dina smakpreferenser\"\r\n            // placeholder=\"Placeholder\"\r\n            multiline\r\n            variant=\"outlined\"\r\n          />\r\n        </FormControl>\r\n        <div className={classes.buttonContainer}>\r\n          <Button type=\"submit\" variant=\"contained\">\r\n            Hitta viner\r\n          </Button>\r\n        </div>\r\n      </form>\r\n    </Card>\r\n  )\r\n}\r\n\r\ninterface AutocompleteProps<T> {\r\n  setState: React.Dispatch<React.SetStateAction<T>>\r\n  data: T\r\n  label: string\r\n}\r\nfunction Autocomplete<T>(props: AutocompleteProps<T>) {\r\n  return (\r\n    <MuiAutocomplete\r\n      multiple\r\n      id=\"tags-standard\"\r\n      options={props.data as any}\r\n      onChange={(e, newValue) => {props.setState((newValue as any) as T)}}\r\n      renderInput={(params) => (\r\n        <TextField\r\n          {...params}\r\n          variant=\"standard\"\r\n          label={props.label}\r\n        />\r\n      )}\r\n    />\r\n  )\r\n}\r\n\r\nexport default Form\r\n","E:\\OneDrive - Linköpings universitet\\Universitetsuppgifter\\ÅR 4\\TNM108 - Maskininlärning för sociala medier\\project\\wine_recommender\\src\\fetcher.ts",[],"E:\\OneDrive - Linköpings universitet\\Universitetsuppgifter\\ÅR 4\\TNM108 - Maskininlärning för sociala medier\\project\\wine_recommender\\src\\Results.tsx",["37","38","39"],"import React, { FormEvent, useContext, useEffect, useState } from 'react'\r\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\r\nimport { Card, Typography, CardHeader, CardMedia, IconButton, ButtonBase, CardContent, Grow } from '@material-ui/core'\r\nimport LocalBarIcon from '@material-ui/icons/LocalBar';\r\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos'\r\nimport { Rating } from '@material-ui/lab'\r\nimport './App.css'\r\nimport { resultWinesContext } from './App'\r\n\r\nconst useStyles = makeStyles((theme) =>\r\n  createStyles({\r\n    heading: {\r\n      display: 'flex',\r\n    },\r\n    backButton: {\r\n      width: 50\r\n    },\r\n    title: {\r\n      width: '100%',\r\n      transform: 'translateX(-25px)'\r\n    },\r\n    wines: {\r\n      display: 'flex',\r\n      flexWrap: 'wrap',\r\n      justifyContent: 'center',\r\n    },\r\n    card: {\r\n      [theme.breakpoints.down('sm')]: {\r\n        margin: 10,\r\n        width: `calc(100% / 1)`,\r\n        maxWidth: 300,\r\n      },\r\n      [theme.breakpoints.up('md')]: {\r\n        margin: 10,\r\n        width: `calc(100% / 2)`,\r\n        maxWidth: 300,\r\n      },\r\n    },\r\n\t\tmedia: {\r\n\t\t\theight: 0,\r\n\t\t\tbackgroundSize: 'contain',\r\n\t\t\tpaddingTop: 150,\r\n\t\t},\r\n  }),\r\n)\r\n\r\ninterface ResultsComponentProps {\r\n\r\n}\r\nconst Results = (props: ResultsComponentProps) => {\r\n  const classes = useStyles();\r\n  const { wines, setWines } = useContext(resultWinesContext)\r\n  console.log(wines)\r\n  return (\r\n\t\t<>\r\n      <div className={classes.heading}>\r\n        <IconButton\r\n          className={classes.backButton}\r\n          color=\"primary\"\r\n          aria-label=\"go back\"\r\n          onClick={()=>{setWines([])}}\r\n        >\r\n          <ArrowBackIosIcon/>\r\n        </IconButton>\r\n        <Typography variant=\"h4\" className={classes.title}>\r\n          Rekommenderade viner för dig\r\n        </Typography>\r\n      </div>\r\n\t\t\t<div className={classes.wines}>\r\n        {wines.map((wine, i) =>\r\n          <Grow\r\n            in\r\n            style={{ transformOrigin: '0 0 0' }}\r\n            {...(true ? { timeout: 300 * i + 500 } : {})}\r\n          >\r\n            <Card title={wine.nameBold} className={classes.card} elevation={10.0} key={wine.nameBold + wine.nameThin}>\r\n              <ButtonBase\r\n                style={{ width: '100%', display: 'block', }}\r\n                disableRipple\r\n                onClick={e => window.open(wine.url, '_blank')}\r\n              >\r\n                <CardHeader\r\n                  title={wine.nameBold}\r\n                  subheader={wine.nameThin}\r\n                />\r\n                <CardMedia\r\n                  className={classes.media}\r\n                  image={wine.imageURL + \"_100.png\"}\r\n                  title={wine.nameBold}\r\n                />\r\n                <CardContent>\r\n                  <Typography variant=\"body1\" color=\"textSecondary\" component=\"p\">\r\n                    {wine.country}\r\n                  </Typography>\r\n                  <Typography variant=\"body1\" component=\"p\">\r\n                    {wine.price} kr\r\n                  </Typography>\r\n                  <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                    {wine.tasteDescription}\r\n                  </Typography>\r\n                </CardContent>\r\n                <Rating\r\n                  name=\"match\"\r\n                  disabled={true}\r\n                  precision={0.1}\r\n                  value={wine.tfidf_score === 0 ? 1 : wine.tfidf_score * 5}\r\n                  icon={<LocalBarIcon />}\r\n                />\r\n              </ButtonBase>\r\n            </Card>\r\n          </Grow>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Results\r\n",{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","replacedBy":"43"},{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","severity":1,"message":"45","line":2,"column":8,"nodeType":"46","messageId":"47","endLine":2,"endColumn":14},{"ruleId":"44","severity":1,"message":"48","line":5,"column":16,"nodeType":"46","messageId":"47","endLine":5,"endColumn":32},{"ruleId":"44","severity":1,"message":"49","line":5,"column":86,"nodeType":"46","messageId":"47","endLine":5,"endColumn":91},{"ruleId":"44","severity":1,"message":"50","line":1,"column":17,"nodeType":"46","messageId":"47","endLine":1,"endColumn":26},{"ruleId":"44","severity":1,"message":"51","line":1,"column":40,"nodeType":"46","messageId":"47","endLine":1,"endColumn":49},{"ruleId":"44","severity":1,"message":"52","line":1,"column":51,"nodeType":"46","messageId":"47","endLine":1,"endColumn":59},"no-native-reassign",["53"],"no-negated-in-lhs",["54"],"@typescript-eslint/no-unused-vars","'useSWR' is defined but never used.","Identifier","unusedVar","'CircularProgress' is defined but never used.","'Slide' is defined but never used.","'FormEvent' is defined but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","no-global-assign","no-unsafe-negation"]